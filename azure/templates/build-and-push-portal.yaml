jobs:
  - deployment: Deploy
    displayName: Build and push Data Ingestion Portal
    environment: $(kubernetesEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: Docker@2
              displayName: Login to container Registry
              inputs:
                command: login
                containerRegistry: $(ACR_SERVICE_CONNECTION)

            - task: Bash@3
              displayName: Get Azure client ID
              inputs:
                targetType: inline
                script: |
                  $AZURE_CLIENT_ID = kubectl get secret -n $(kubernetesNamespace) oi-ingestionportal-secrets-$(deployEnv) -o jsonpath="{.data.AZURE_CLIENT_ID}" | base64 --decode
                  echo "##vso[task.setvariable variable=AZURE_CLIENT_ID;issecret=true;isOutput=true;]$(AZURE_CLIENT_ID)"

            - task: Docker@2
              displayName: Build Docker image
              inputs:
                command: build
                repository: giga-ingestion-portal
                dockerfile: $(Build.SourcesDirectory)/Dockerfile.prod
                arguments: >
                  --build-arg "VITE_SENTRY_DSN=$(sentryDsn)"
                  --build-arg "VITE_AZURE_CLIENT_ID=$(AZURE_CLIENT_ID)"
                  --build-arg "VITE_AZURE_TENANT_ID=$(azureAdTenantId)"
                  --build-arg "VITE_AZURE_TENANT_NAME=$(azureAdTenantName)"
                  --build-arg "VITE_AZURE_EDIT_PROFILE_AUTH_POLICY_NAME=$(azureEditProfileAuthPolicyName)"
                  --build-arg "VITE_AZURE_PASSWORD_RESET_AUTH_POLICY_NAME=$(azureAdPasswordResetAuthPolicyName)"
                  --build-arg "VITE_AZURE_SUSI_AUTH_POLICY_NAME=$(azureAdSuSiAuthPolicyName)"
                  --build-arg "VITE_DATAHUB_URL=https://$(datahubIngressHost)"
                  --build-arg "VITE_COMMIT_SHA=$(Build.SourceVersion)"
                  --build-arg "VITE_DEPLOY_ENV=$(deployEnv)"
                tags: |
                  $(Build.SourceVersion)

            - task: Docker@2
              displayName: Push image to container registry
              inputs:
                command: push
                repository: giga-ingestion-portal
                containerRegistry: $(ACR_SERVICE_CONNECTION)
                tags: |
                  $(Build.SourceVersion)
